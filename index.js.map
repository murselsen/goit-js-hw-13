{"version":3,"file":"index.js","sources":["../src/js/main.js"],"sourcesContent":["import axios from \"axios\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n// my API key : 49373653-d22f76e72713087fcf9bb4de1\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\n\nconst form = document.querySelector(\".app-form\");\nconst gallery = document.querySelector(\".gallery\");\nconst btnPrev = document.querySelector('.btn-prev');\nconst btnNext = document.querySelector('.btn-next');\n\nconst lightbox = new SimpleLightbox('.gallery a', { /* options */ });\nconst postsPerPage = 10;\nlet currentPage = 1;\n\n\nconst fetchData = async () => {\n    gallery.innerHTML = \"\";\n    const searchValue = form.elements.search.value;\n    console.log(searchValue);\n    const response = await axios.get('https://pixabay.com/api/', {\n        params: {\n            key: '49373653-d22f76e72713087fcf9bb4de1',\n            q: searchValue,\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n            page: currentPage,\n            per_page: postsPerPage,\n        },\n    })\n        .then((response) => {\n            const images = response.data.hits;\n            console.log(images.length);\n            const totalHits = response.data.totalHits;\n            if (images.length === 0) {\n                iziToast.error({\n                    title: \"Error\",\n                    message: \"Sorry, there are no images matching your search query. Please try again!\",\n                    position: \"topRight\",\n                });\n            } else {\n                images.forEach(img => {\n                    // console.log(img);\n                    gallery.innerHTML += ` \n                    <li class=\"gallery-item\">\n                        <a href=\"${img.largeImageURL}\" class=\"image\">\n                        <img src=\"${img.webformatURL}\" width=\"360\" height=\"200\" alt=\"${img.tags}\"/>\n                        </a>\n                        <div class=\"content\">\n                            <div class=\"info\">\n                                <h5 class=\"key\">Likes</h5>\n                                <p class=\"value\">${img.likes}</p>\n                            </div>\n                            <div class=\"info\">\n                                <h5 class=\"key\">Views</h5>\n                                <p class=\"value\">${img.views}</p>\n                            </div>\n                            <div class=\"info\">\n                                <h5 class=\"key\">Comments</h5>\n                                <p class=\"value\">${img.comments}</p>\n                            </div>\n                            <div class=\"info\">\n                                <h5 class=\"key\">Downloads</h5>\n                                <p class=\"value\">${img.downloads}</p>\n                            </div>\n                        </div>\n                    </li>`;\n                });\n\n                lightbox.refresh();\n                updateButtons(totalHits);\n            }\n        })\n        .catch((error) => {\n            console.error(error);\n        });\n};\nform.addEventListener(\"submit\", (e) => {\n    e.preventDefault();\n    fetchData();\n    form.elements.search.value = \"\";\n});\n\nconst updateButtons = (totalHits) => {\n    const totalPages = Math.ceil(totalHits / postsPerPage);\n    btnNext.style.display = currentPage < totalPages ? 'block' : 'none';\n    btnPrev.style.display = currentPage > 1 ? 'block' : 'none';\n};\nbtnNext.addEventListener('click', () => {\n    currentPage++;\n    fetchData();\n});\n\nbtnPrev.addEventListener('click', () => {\n    currentPage--;\n    fetchData();\n});\n"],"names":["axios","form","gallery","btnPrev","btnNext","lightbox","SimpleLightbox","postsPerPage","currentPage","fetchData","searchValue","response","images","totalHits","iziToast","img","updateButtons","error","e","totalPages"],"mappings":"owBAOAA,EAAM,SAAS,QAAU,2BAGzB,MAAMC,EAAO,SAAS,cAAc,WAAW,EACzCC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAU,SAAS,cAAc,WAAW,EAC5CC,EAAU,SAAS,cAAc,WAAW,EAE5CC,EAAW,IAAIC,EAAe,aAAc,CAAiB,CAAA,EAC7DC,EAAe,GACrB,IAAIC,EAAc,EAGlB,MAAMC,EAAY,SAAY,CAC1BP,EAAQ,UAAY,GACpB,MAAMQ,EAAcT,EAAK,SAAS,OAAO,MACzC,QAAQ,IAAIS,CAAW,EACN,MAAMV,EAAM,IAAI,2BAA4B,CACzD,OAAQ,CACJ,IAAK,qCACL,EAAGU,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMF,EACN,SAAUD,CACb,CACT,CAAK,EACI,KAAMI,GAAa,CAChB,MAAMC,EAASD,EAAS,KAAK,KAC7B,QAAQ,IAAIC,EAAO,MAAM,EACzB,MAAMC,EAAYF,EAAS,KAAK,UAC5BC,EAAO,SAAW,EAClBE,EAAS,MAAM,CACX,MAAO,QACP,QAAS,2EACT,SAAU,UAC9B,CAAiB,GAEDF,EAAO,QAAQG,GAAO,CAElBb,EAAQ,WAAa;AAAA;AAAA,mCAENa,EAAI,aAAa;AAAA,oCAChBA,EAAI,YAAY,mCAAmCA,EAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,mDAK5CA,EAAI,KAAK;AAAA;AAAA;AAAA;AAAA,mDAITA,EAAI,KAAK;AAAA;AAAA;AAAA;AAAA,mDAITA,EAAI,QAAQ;AAAA;AAAA;AAAA;AAAA,mDAIZA,EAAI,SAAS;AAAA;AAAA;AAAA,0BAIhE,CAAiB,EAEDV,EAAS,QAAO,EAChBW,EAAcH,CAAS,EAEvC,CAAS,EACA,MAAOI,GAAU,CACd,QAAQ,MAAMA,CAAK,CAC/B,CAAS,CACT,EACAhB,EAAK,iBAAiB,SAAWiB,GAAM,CACnCA,EAAE,eAAc,EAChBT,IACAR,EAAK,SAAS,OAAO,MAAQ,EACjC,CAAC,EAED,MAAMe,EAAiBH,GAAc,CACjC,MAAMM,EAAa,KAAK,KAAKN,EAAYN,CAAY,EACrDH,EAAQ,MAAM,QAAUI,EAAcW,EAAa,QAAU,OAC7DhB,EAAQ,MAAM,QAAUK,EAAc,EAAI,QAAU,MACxD,EACAJ,EAAQ,iBAAiB,QAAS,IAAM,CACpCI,IACAC,GACJ,CAAC,EAEDN,EAAQ,iBAAiB,QAAS,IAAM,CACpCK,IACAC,GACJ,CAAC"}